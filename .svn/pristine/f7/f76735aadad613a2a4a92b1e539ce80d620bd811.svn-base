// pages/index/firm/service/addService/addService.js
import WxValidate from '../../../../../utils/WxValidata.js'
const app = getApp()
Page({
  /**
   * 生命周期函数--监听页面加载
   */
  onLoad: function(options) {
    var hidO = getApp().data.addServiceOne;
    var hidT = getApp().data.addServiceTwo;
    var that = this;
    this.setData({
      hidOne:hidO,
      hidTwo:hidT,
      staffId: options.staffId
    })
    // 请求分类的数据
    wx.request({
      url: app.globalData.webroot +  '/index/firm/getService',
      method: 'POST',
      data: {
        
      },
      header: {
        'content-type': 'application/json' // 默认值
      },
      success(res) {
        var data = res.data.msg;
        that.setData({
          classifyList:data
        })
        console.log(that.data.classifyList)
      }
    })
// 执行检验函数
    this.initValidata()
  },

  /**
  * 验证函数
  */
  initValidata: function () {
    // 
    const rules = {
      serviceName: {
        required: true,
        maxlength: 30
      },
      serviceTitle: {
        required: true,
        maxlength: 30
      },
      lowPrice: {
        required: true,
        number: true,
        maxlength: 7
      },
      highPrice: {
        number: true,
        maxlength: 7
      },
      needTime: {
        required: true,
        number:true,
        maxlength: 4
      },
      introduce: {
        required: true,
        maxlength: 500
      }
     


    }
    const message = {
      serviceName: {
        required: '服务项目名称不能为空',
        maxlength: '服务项目名称最长30字符'
      },
      serviceTitle: {
        required: '服务项目副标题不能为空',
        maxlength: '服务项目副标题最长30字符'
      },
      lowPrice: {
        required: '最低价不能为空',
        number: '请输入正确的最低价',
        maxlength: '最低价长度不能超过7位'
      },
      highPrice: {
        number: '请输入正确的最高价',
        maxlength: '最高价长度不能超过7位'
      },
      needTime: {
        required: '耗时不能为空',
        number: '请填写正确的耗时',
        maxlength: '耗时最长4位字符'
      },
      introduce: {
        required: '服务介绍不能为空',
        maxlength: '服务介绍长度不能超过500'
      }
    }
    this.WxValidate = new WxValidate(rules, message);
  },
  /**
   * 页面的初始数据
   */
  data: {
    staffId: '',
    serviceId: '',
    hidOne: getApp().data.addServiceOne,
    hidTwo: getApp().data.addServiceTwo,
    showModal: false,
    classifyList: [
      
      // {
      //   Name: "化妆",
      //   checked: false,
      //   Seq: 'C1',  
      //   Pid: [{
      //     name: "新娘",
      //     checked: false,
      //     Seq: 'C2',
      //   }, {
      //     name: "职业",
      //     checked: false,
      //       Seq: 'C3',
      //   }]
      // },
     
    ],
    form: {
      serviceName: '项目名称',
      serviceTitle: '项目标题',
      lowPrice: 10,
      highPrice: 100,
      needTime: 30,
      introduce: '服务介绍'
    },
    uploaderList: [],
    uploaderNum: 0,
    showUpload: true,
    imgs:[],
    addImg:true,
    catList:[],
    catListBig:[],
    catListSmall:[],
    isAddShow:true,
    descLength:0

    
  },

  // 上传图片
  chooseImg: function (e) {
    var that = this;
    var imgs = this.data.imgs;
    if (imgs.length >= 9) {
      this.setData({
        lenMore: 1
      });
      setTimeout(function () {
        that.setData({
          lenMore: 0
        });
      }, 2500);
      return false;
    }else{
      that.setData({
        addImg:true
      })
    }
    wx.chooseImage({
      // count: 1, // 默认9
      // 可以指定是原图还是压缩图，默认二者都有
      sizeType: ['original', 'compressed'], 
      // 可以指定来源是相册还是相机，默认二者都有
      sourceType: ['album', 'camera'], 
      success: function (res) {
        // 返回选定照片的本地文件路径列表，tempFilePath可以作为img标签的src属性显示图片
        var tempFilePaths = res.tempFilePaths;
        var imgs = that.data.imgs;
        // console.log(tempFilePaths + '----');
        for (var i = 0; i < tempFilePaths.length; i++) {
          if (imgs.length >= 9) {
            that.setData({
              imgs: imgs,
              addImg: false
            });
            return false;
          } else {
            imgs.push(tempFilePaths[i]);
          }
        }
        that.setData({
          imgs: imgs
        });
        console.log(imgs.length)
        if(imgs.length == 9){
          that.setData({
            isAddShow: false
          })
        }
      }
    });
  },
  // 删除图片
  deleteImg: function (e) {
    var imgs = this.data.imgs;
    var index = e.currentTarget.dataset.index;
    imgs.splice(index, 1);
    this.setData({
      imgs: imgs
    });
    if(imgs.length<9){
      this.setData({
        isAddShow:true
      })
    }
  },
  // 预览图片
  previewImg: function (e) {
    //获取当前图片的下标
    var index = e.currentTarget.dataset.index;
    //所有图片
    var imgs = this.data.imgs;
    wx.previewImage({
      //当前显示图片
      current: imgs[index],
      //所有图片
      urls: imgs
    })
  },
 
  // 改变分类选中样式
  ChangeCss: function(e) {
    if (this.data.classifyList[e.currentTarget.dataset.index].checked == 'false') {
      // 分类
      var cat = e.currentTarget.dataset.cat;
      var catItem = this.data.catList.concat(cat)
      var items = this.data.classifyList;
      items[e.currentTarget.dataset.index]["checked"] = 'true';
      this.setData({
        classifyList: items,
        catList: catItem
      })
    } else {
      var items = this.data.classifyList;
      
      var catList = this.data.catList;
      var cat = e.currentTarget.dataset.cat;
      var catTemp = [];
      for(var i=0;i<catList.length;i++){
        var item = catList[i];
        var _i = catList.indexOf(cat);
        if(_i == -1){
          catTemp.push(item)
        }
      }
      items[e.currentTarget.dataset.index]["checked"] = 'false';
      // console.log(items[e.currentTarget.dataset.index]['Pid'][0]['Seq'])
      for (var j = 0; j < items[e.currentTarget.dataset.index]['Pid'].length;j++){
        items[e.currentTarget.dataset.index]['Pid'][j]['checked'] = 'false';
      }
      this.setData({
        classifyList: items,
        catList: catTemp
      })
    }
    console.log(this.data.catList)
  },
  ChangeContentCss: function(e) {
    var cat = e.currentTarget.dataset.cat;
    var catP = cat.substr(0, 1);
    var catPos = this.data.catList.indexOf(catP);
    // 判断选中分类数组中是否存在catp
    var item1 = this.data.catList;
    if (e.currentTarget.dataset.checked == 'false') {
      console.log(catPos)
      if(catPos == -1){
        // 将未选中的主分类添加到数组中，同时改变数组中主分类的checked属性
        item1.push(catP);
      }
      item1.push(cat);
      var items = this.data.classifyList;
      items[e.currentTarget.dataset.index].Pid[e.currentTarget.dataset.index1].checked = 'true';
      for(var i=0;i<items.length;i++){
        if(items[i].checked == 'false' && items[i].Seq == catP){
          items[i].checked = 'true';
        }
      }
      this.setData({
        classifyList: items,
        catList: item1
      })
    } else {
      console.log('去掉分类')
      var _i = item1.indexOf(cat);
      item1.splice(_i, 1);
      var items = this.data.classifyList;
      items[e.currentTarget.dataset.index].Pid[e.currentTarget.dataset.index1].checked = 'false';
      this.setData({
        classifyList: items,
        catList:item1
      })
    }
    console.log(this.data.catList)
  },


  //弹窗
  showDialogBtn: function() {
    this.setData({
      showModal: true
    })
  },
  /**
   * 表单提交
   */
  formSubmit: function(e) {
    var that = this;
    //校验表单
    const params = e.detail.value
    if (!this.WxValidate.checkForm(params)) {
      const error = this.WxValidate.errorList[0]
      this.showModal(error)
      return false;
    }
    // 将分类数组分类
    var b = [];
    var s = [];
    for(var i=0;i<this.data.catList.length;i++){
     
      var item = this.data.catList[i];
      if (item.length == 1){
        b.push(item);
      }else{
        s.push(item)
      }
      
    }
    this.setData({
      catListBig: b,
      catListSmall: s
    })
    
    if (this.data.catListBig.length == 0 || this.data.catListSmall.length == 0){
      wx.showModal({
        content: '请选择正确的大分类和小分类',
        showCancel: false
      })
      return false;
    }
    if(this.data.imgs.length == 0) {
      wx.showModal({
        content: '请添加图片',
        showCancel: false
      })
      return false;
    }
    // 上传数据
    wx.request({
      url: app.globalData.webroot + '/index/firm/addFirm',
      method: 'POST',
      data: {
        info: this.data.form,
        bigCat: this.data.catListBig,
        smallCat: this.data.catListSmall,
        staffId: this.data.staffId
      },
      header: {
        'content-type': 'application/json' // 默认值
      },
      success(res) {
        if(res.data.code != 1){
          return false;
        }
        var serviceId = res.data.msg;
        that.setData({
          serviceId: serviceId
        })
        console.log("信息上传成功，处理图片");
// 上传图片
		for (var i = 0; i < that.data.imgs.length; i++) {
		  var imgUrl = that.data.imgs[i];
			wx.uploadFile({
        url: app.globalData.webroot + '/index/firm/addFirmHandleImg', 
			  filePath: imgUrl,// 上传的文件资源的路径
			  name: 'serviceImage',
			  // HTTP请求中其他额外的form data
			  formData: {
          serviceId: serviceId
			  },
			  success(res) {
          console.log(res)
          var code = JSON.parse(res.data).code;
          
          if(code == 1){
            // 服务添加成功，图片上传成功
            wx.redirectTo({
              url: '/pages/index/firm/service/serviceList/serviceList',
            })

          }else{
            // 服务添加成功，图片上传失败
            console.log("图片传失败")
          }
				//do something
			  }
			})
		}
		
      },
      fail(res) {

      }
    })

  },
  /**
   * 添加图片
   */
  addServiceImage: function() {
    console.log('添加服务介绍图片')
    wx.chooseImage({
      count: 1,
      sizeType: ['original', 'compressed'],
      sourceType: ['album', 'camera'],
      success(res) {
        // tempFilePath可以作为img标签的src属性显示图片
        const tempFilePaths = res.tempFilePaths
        console.log(tempFilePaths);
      }
    })
  },
  //弹出框蒙层截断touchmove事件
  preventTouchMove: function() {},
  // 隐藏模态对话框
  hideModal: function() {
    this.setData({
      showModal: false
    });
  },
  //对话框确认按钮点击事件
  onConfirm: function() {
    this.hideModal();
  },
  /**
    * 报错
    */
  showModal(error) {
    wx.showModal({
      content: error.msg,
      showCancel: false
    })
  },
  /**
    * textareaAInput 将用户输入数据绑定到this.data中
    */
  textareaAInput: function (e) {
    var val = e.detail.value;
    var length = val.length;
    this.setData({
      descLength: length
    })
  },


  /**
   * 生命周期函数--监听页面初次渲染完成
   */
  onReady: function() {

  },

  /**
   * 生命周期函数--监听页面显示
   */
  onShow: function() {
   
  },

  /**
   * 生命周期函数--监听页面隐藏
   */
  onHide: function() {

  },

  /**
   * 生命周期函数--监听页面卸载
   */
  onUnload: function() {

  },

  /**
   * 页面相关事件处理函数--监听用户下拉动作
   */
  onPullDownRefresh: function() {

  },

  /**
   * 页面上拉触底事件的处理函数
   */
  onReachBottom: function() {

  },

  /**
   * 用户点击右上角分享
   */
  onShareAppMessage: function() {

  }
})