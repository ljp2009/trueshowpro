// pages/index/firm/firmCard/choiceStaff/choiceStaff.js

// var myfunc=require( "../../../../common/timearea/timearea.js",);
const app = getApp();
Page({

  /**
   * 页面的初始数据
   */
  data: {
    webRoot: app.globalData.webroot,
    webRoot1: app.globalData.webroot1,
    
    dateArr:[],  //时间
    staffDetail:[],  //技师详细信息
    // 星星
    stars1: [{
      lightImg: 'http://ljp.jujiaoweb.com/static/images/index/star_light.png',
      blackImg: 'http://ljp.jujiaoweb.com/static/images/index/star_black.png',
      flag: 0,
      message: '非常不满意，各方面都很差'
    }, {
      lightImg: 'http://ljp.jujiaoweb.com/static/images/index/star_light.png',
      blackImg: 'http://ljp.jujiaoweb.com/static/images/index/star_black.png',
      flag: 0,
      message: '不满意，比较差'
    }, {
      lightImg: 'http://ljp.jujiaoweb.com/static/images/index/star_light.png',
      blackImg: 'http://ljp.jujiaoweb.com/static/images/index/star_black.png',
      flag: 0,
      message: '一般，还要改善'
    }, {
      lightImg: 'http://ljp.jujiaoweb.com/static/images/index/star_light.png',
      blackImg: 'http://ljp.jujiaoweb.com/static/images/index/star_black.png',
      flag: 0,
      message: '一般，还要改善'
    }, {
      lightImg: 'http://ljp.jujiaoweb.com/static/images/index/star_light.png',
      blackImg: 'http://ljp.jujiaoweb.com/static/images/index/star_black.png',
      flag: 0,
      message: '一般，还要改善'
    }],
    //时间滑块 变量
    ifviewenable: false,  //此字段为是否需要显示选择服务的时间的一些布局
    timedata: {      //记录当前不能选的区域 以及可以选的区域
      workarea: {
        x1: "09:00",
        x2: "22:00",
        x1x: 0,
        x2x: 0
      },

      // 已经预约出去的时间
      disabledarea: {
        x1: "11:30",
        x2: "15:00",
        x1x: 0,
        x2x: 0
      },
      //开始服务
      enabledarea: {
        x1: "11:30",
        x2: "13:00",
        x1x: 0,
        x2x: 0
      },
      leftarea: 20,   //绘制的市和左边的距离
      rightarea: 20,  //绘制的市和右边的距离
      xdis: 10,
      startX: 0,
      movex: 0,
      down: {
        x1: 0,
        x2: 0
      },
      sideswidth: 0.9,   //当前canva占用总区域的百分比 

    },

    canvasHeight: 80,  //当前绘制的高度
    canvasBgcolor: "#f9f9f9",

    serviceId:0, //当前这个服务项目的id
  },

  /**
   * 生命周期函数--监听页面加载
   */
  onLoad: function (options) {
    var that = this;
    var serviceId = options.serviceId;
    that.setData({
      serviceId: serviceId
    })
    // 关于时间滑块
    //计算拖拽时的时间和坐标之间的转换
    this.changeworktime()

    //绘制不可选区域 和可选区域
    // this.drawarea()
    // 时间滑块结束
   
    // 关于日期的js
    var date = new Date();
    var arr = [];
    var showDate = date.getFullYear() + '/' + (date.getMonth() + 1) + '/' + date.getDate();
    console.log("今天日期是" + showDate)   //今天日期
    arr.push(date.getDate());
    for (var i = 1; i <= 6; i++) {//后7天
      date.setDate(date.getDate() + 1);
      showDate = date.getFullYear() + '/' + (date.getMonth() + 1) + '/' + date.getDate();
      // console.log(showDate)
      arr.push(date.getDate());
      console.log(date.getDate())
    }
    that.setData({
      dateArr: arr
    })
    console.log(that.data.dateArr);
    // 请求后端 得到数据
    wx.request({
      //url: app.globalData.webroot + '/index/user/getStaffByService',
      url: app.globalData.webroot1 + '/index/user/getStaffByService',
      method: "post",
      data: {
        serviceId: that.data.serviceId,    //服务项目id
      },
      header: {
        'content-type': 'application/x-www-form-urlencoded' //post请求
      },
      success(res) {
       console.log(res.data.msg);
        var data = res.data.msg;
        that.setData({
          staffDetail: data
        })
        console.log(that.data.staffDetail);
        //
        for (var i = 0; i < data.length; i++) {
          that.drawarea();   //
          console.log(i);
          var satisfection = data[i]['Satisfection'] / 10;//评分
          var num = Math.round(satisfection);//四舍五入分
          console.log(satisfection + "========");
          console.log(num + "-----")


          data[i]['stars'] = num;
          data[i]['timedata'] = {      //记录当前不能选的区域 以及可以选的区域
            workarea: {
              x1: "09:00",
              x2: "22:00",
              x1x: 0,
              x2x: 0
            },

            // 已经预约出去的时间
            disabledarea: {
              x1: "09:30",
              x2: "14:00",
              x1x: 0,
              x2x: 0
            },
            //开始服务
            enabledarea: {
              x1: "11:30",
              x2: "13:00",
              x1x: 0,
              x2x: 0
            },
            leftarea: 20,   //绘制的市和左边的距离
            rightarea: 20,  //绘制的市和右边的距离
            xdis: 10,
            startX: 0,
            movex: 0,
            down: {
              x1: 0,
              x2: 0
            },
            sideswidth: 0.9,   //当前canva占用总区域的百分比 

          }
        }
        console.log("整理得---");
        console.log(data);
        that.setData({
          staffDetail: data
        })
        console.log(that.data.staffDetail);
        
      }
    })
  },
  // 引用的时间滑块js
  changeworktime: function () {
    //已经预约出去的工作时间和结束工作时间转成时间戳

    var date4 = this.data.timedata.disabledarea["x1"];//不可选择的时间段开始时间
    date4 = date4.split(":")    //分割时间09    30
    date4 = date4[0] * 60 * 60 + date4[1] * 60   //09*60*60+30*60(化成秒数)



    var date5 = this.data.timedata.disabledarea["x2"];//不可选择的时间段结束时间
    date5 = date5.split(":")
    date5 = date5[0] * 60 * 60 + date5[1] * 60





    //开始工作时间和结束工作时间转成时间戳
    // var date = this.data.startwork;
    var date = this.data.timedata.workarea["x1"];
    date = date.split(":")
    date = date[0] * 60 * 60 + date[1] * 60//开始工作时间的秒数



    var date1 = this.data.timedata.workarea["x2"];
    date1 = date1.split(":")
    date1 = date1[0] * 60 * 60 + date1[1] * 60
    // console.log("结束工作的时间：" + "----" + date1)

    //开始服务时间和结束服务时间转成秒

    var date2 = this.data.timedata.enabledarea["x1"];
    date2 = date2.split(":")
    date2 = date2[0] * 60 * 60 + date2[1] * 60
    // console.log("开始服务的时间：" + this.data.startserver + "----" + date2)


    var date3 = this.data.timedata.enabledarea["x2"];
    date3 = date3.split(":")
    date3 = date3[0] * 60 * 60 + date3[1] * 60
    // console.log("结束服务的时间："+this.data.endserver + "----" + date3) 

    //转成对应的x坐标开始工作的x和结束工作的x
    // //读取当前最左侧的x坐标
    var w = wx.getSystemInfoSync().windowWidth;

    var startWorkX = 0;
    // var endWorkX =0.8*w;
    var endWorkX = this.data.timedata.sideswidth * w
    // this.data.timedata.tadwidth = endWorkX+"px"

    // console.log("工作对应的x-----------w="+w+"----"+startWorkX + "-----" + endWorkX)

    var workarea = this.data.timedata.workarea
    workarea["x1x"] = startWorkX    //工作开始的坐标//18.75
    workarea["x2x"] = endWorkX      //工作结束的坐标//356.25
    // console.log("工作对应的x-----------w=" + w + "----" + workarea["x1x"] + "-----" + workarea["x2x"])



    //转成对应的x坐标开始服务的x和结束服务的x
    // console.log((date1-date) + "---" + (date2-date)+"---"+date)
    var startServerX = ((endWorkX - startWorkX) / (date1 - date)) * (date2 - date) + startWorkX
    var endServerX = ((endWorkX - startWorkX) / (date1 - date)) * (date3 - date) + startWorkX

    var enabledarea = this.data.timedata.enabledarea
    enabledarea["x1x"] = startServerX
    enabledarea["x2x"] = endServerX

    // console.log("服务对应的x---" + startServerX + "---" + endServerX) 


    //已经预约出去的时间转成对应的x坐标开始服务的x和结束服务的x
    var startServeredX = ((endWorkX - startWorkX) / (date1 - date)) * (date4 - date) + startWorkX
    var endServeredX = ((endWorkX - startWorkX) / (date1 - date)) * (date5 - date) + startWorkX

    var disabledarea = this.data.timedata.disabledarea
    disabledarea["x1x"] = startServeredX
    disabledarea["x2x"] = endServeredX


    // console.log("已经预约对应的x---" +  startServeredX + "---" + endServeredX)

    var timedata = this.data.timedata;
    timedata["workarea"] = workarea;  //工作区域
    timedata["enabledarea"] = enabledarea;//可选择区域
    timedata["disabledarea"] = disabledarea;//补课选择区域
    this.setData({
      timedata: timedata

    })

  },
  getPos: function () {
    // 得到工作的时间点和坐标
    var workstartdate = this.data.timedata.workarea["x1"];
    workstartdate = workstartdate.split(":")
    workstartdate = workstartdate[0] * 60 * 60 + workstartdate[1] * 60
    // console.log("开始工作的时间：" + "----" + workstartdate)

    var workenddate = this.data.timedata.workarea["x2"];
    workenddate = workenddate.split(":")
    workenddate = workenddate[0] * 60 * 60 + workenddate[1] * 60
    // console.log("结束时间：" + workenddate) 

    var workstartx = this.data.timedata.workarea["x1x"];//工作时间的开始坐标
    var workendx = this.data.timedata.workarea["x2x"];//工作时间的结束坐标


    // 得到当前服务的时间点要求坐标所对应的时间点

    var enabledstartdate = this.data.timedata.enabledarea["x1x"];//可选择的时间的开始坐标
    var enabledenddate = this.data.timedata.enabledarea["x2x"];//可选择的时间的结束坐标

    var enabledstartx = ((workenddate - workstartdate) / (workendx - workstartx)) * (enabledstartdate - workstartx) + workstartdate
    var enabledendx = ((workenddate - workstartdate) / (workendx - workstartx)) * (enabledenddate - workstartx) + workstartdate

    var enabledstartH = Math.floor(enabledstartx / (60 * 60));
    var enabledstartM = Math.floor((enabledstartx / (60 * 60) - enabledstartH) * 60);
    var enabledstartStr = enabledstartH + ":" + enabledstartM;

    var enabledendH = Math.floor(enabledendx / (60 * 60));
    var enabledendM = Math.floor((enabledendx / (60 * 60) - enabledendH) * 60);
    var enabledendStr = enabledendH + ":" + enabledendM;

    var timedata = this.data.timedata;
    timedata.enabledarea["x1"] = enabledstartStr;
    timedata.enabledarea["x2"] = enabledendStr;

    this.setData({
      timedata: timedata

    })

  },

  drawarea: function () {
    console.log("---------------" + this.data.canvasHeight)
    // 读取当前容器的宽度
    var w = wx.getSystemInfoSync().windowWidth
    var context = wx.createCanvasContext('timeCanvas')
    //绘制绿色区域
    context.clearRect(0, 0, w, this.data.canvasHeight)
    context.beginPath()
    // context.setStrokeStyle("#999")
    // context.strokeRect(0, 0, w-10, this.data.canvasHeight-10)
    context.setFillStyle(this.data.canvasBgcolor)
    context.rect(0, 0, w, this.data.canvasHeight)
    context.fill()
    // context.stroke()
    context.closePath()
    // 绘制灰色区域
    context.beginPath()
    // context.setFillStyle("#cccccc")
     context.setFillStyle("#cccccc")
    context.rect(this.data.timedata.disabledarea.x1x, 0, (this.data.timedata.disabledarea.x2x - this.data.timedata.disabledarea.x1x), this.data.canvasHeight)
    context.fill()
    context.closePath()

    // 绘制一个默认的可以拖拽的区域（红色区域）
    if (this.data.ifviewenable) {
      context.beginPath()
      context.setFillStyle("red")
      context.rect(this.data.timedata.enabledarea.x1x, 0, (this.data.timedata.enabledarea.x2x - this.data.timedata.enabledarea.x1x), this.data.canvasHeight)
      context.fill()
      context.closePath()
    }

    context.draw()
  },



  start: function (e) {
    console.log("start函数")
    var timedata = this.data.timedata
    timedata["startx"] = e.touches[0]["x"]


    var down = {};
    down["x1"] = timedata.enabledarea["x1x"];
    down["x2"] = timedata.enabledarea["x2x"];
    timedata["down"] = down;

    // console.log("--" + timedata.enabledarea["x1x"])

    this.setData({
      timedata: timedata,
    })
  },
  move: function (e) {
    var timedata = this.data.timedata

    if ((e.touches[0]["x"] - timedata.enabledarea["x1x"]) < timedata.xdis) {
      console.log("拖拽左边的边")

      timedata.enabledarea["x1x"] -= (timedata.enabledarea["x1x"] - e.touches[0]["x"])

    } else if (Math.abs(e.touches[0]["x"] - timedata.enabledarea["x2x"]) < timedata.xdis) {
      console.log("拖拽右边的边")
      timedata.enabledarea["x2x"] += (e.touches[0]["x"] - timedata.enabledarea["x2x"])

    } else {
      // console.log("移动可选区域")
      var deltax = e.touches[0]["x"] - timedata["startx"]
      if (deltax < 0) {
        //左移动
        timedata.enabledarea["x1x"] -= Math.abs(deltax)
        timedata.enabledarea["x2x"] -= Math.abs(deltax)
      } else {
        // 右移动
        timedata.enabledarea["x1x"] += Math.abs(deltax)
        timedata.enabledarea["x2x"] += Math.abs(deltax)
      }
      timedata["startx"] = e.touches[0]["x"]
    }


    timedata.movex = e.touches[0]["x"]

    this.setData({
      timedata: timedata
    })

    this.drawarea();

    this.getPos(); //重新计算时间


  },
  end: function (e) {
    // console.log(e.touches)

    var timedata = this.data.timedata;
    //判断服务结束时间是否大于服务开始时间
    if (timedata.enabledarea["x2x"] <= timedata.enabledarea["x1x"]) {
      timedata.enabledarea["x2x"] = this.data.timedata.down.x2
    }
    var down = this.data.timedata.down;
    //判断服务时间是否与非服务时间重合
    var if1 = timedata.enabledarea.x1x > timedata.disabledarea["x1x"] && timedata.enabledarea.x1x < timedata.disabledarea["x2x"]
    var if2 = timedata.enabledarea.x2x > timedata.disabledarea["x1x"] && timedata.enabledarea.x2x < timedata.disabledarea["x2x"]
    var if3 = timedata.disabledarea["x1x"] > timedata.enabledarea.x1x && timedata.disabledarea["x2x"] < timedata.enabledarea.x2x
    if (if1 || if2 || if3) {
      //不改变
      console.log("不可以移动到此处")
      timedata.enabledarea["x1x"] = down.x1;
      timedata.enabledarea["x2x"] = down.x2;


    } else {
      //不在这个区间内 就可以移动位置
      console.log("--可以移动到此处")


    }
    this.setData({
      timedata: timedata
    })

    this.drawarea();
    this.getPos(); //重新计算时间
  },
  // 时间滑块结束

  /**
   * 生命周期函数--监听页面初次渲染完成
   */
  onReady: function () {

  },

  /**
   * 生命周期函数--监听页面显示
   */
  onShow: function () {

  },

  /**
   * 生命周期函数--监听页面隐藏
   */
  onHide: function () {

  },

  /**
   * 生命周期函数--监听页面卸载
   */
  onUnload: function () {

  },

  /**
   * 页面相关事件处理函数--监听用户下拉动作
   */
  onPullDownRefresh: function () {

  },

  /**
   * 页面上拉触底事件的处理函数
   */
  onReachBottom: function () {

  },

  /**
   * 用户点击右上角分享
   */
  onShareAppMessage: function () {

  }
})