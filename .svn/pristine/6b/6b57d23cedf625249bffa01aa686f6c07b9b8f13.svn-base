// pages/index/firm/firmIndex/staffList/staffList.js
var app = getApp()
Page({

  /**
   * 页面的初始数据
   */
  data: {
    firmId:0,
    act:-1,
    mlist:[], 
    members:[]
  },

  /**
   * 生命周期函数--监听页面加载
   */
  onLoad: function (options) {
    var firmId = options.firmId;
    var that = this;
    this.setData({
      firmId:firmId
    })
    wx.request({
      url: app.globalData.webroot + '/index/firm/getMembers',
      method: 'POST',
      data: {
        firmId: firmId
      },
      header: {
        'content-type': 'application/json' // 默认值
      },
      success(res) {
        var msg = res.data.msg;
        that.setData({
          members: msg
        })
      }
    })
  },

/**
 * 选择申请中的成员
 */
chooseWait: function (e) {
  var isChoose = e.currentTarget.dataset.ischoose;
  var index = e.currentTarget.dataset.index;
  var a = this.data.mlist;//临时记录选中成员
  var tmpMembers = this.data.members;
  for (var i = 0; i < tmpMembers['formal'].length; i++) {
    var item = tmpMembers['formal'][i];
    item['isChoose'] = 0;
  }
  this.setData({
    members: tmpMembers
  })
  if(isChoose == 1 ){
    isChoose = 0;
    var pos = a.indexOf(index);
    if (pos > -1) {
      a.splice(pos, 1);
    } 
  }else if(isChoose == 0){
    isChoose = 1;
    // 在存放操作数组中，使用第一个元素来判断操作类型
    if (a.length == 0) {
      // 数组为空，第一次放数据进去，  wait  ---  操作申请中的成员    formal ------  操作正式成员
      a[0] = 'wait';
      a.push(index);
    } else {
      if (a[0] == 'wait') {
        a.push(index);
      } else {
        a = [];
        a[0] = 'wait';
        a.push(index);
      }
    }
  }
  var index = e.currentTarget.dataset.index;
  var members = this.data.members;
  for (var i = 0; i < members['wait'].length;i++){
    if (index == members['wait'][i]['UserId']){
      members['wait'][i]['isChoose'] = isChoose;
      this.setData({
        members:members
      })
    }
  }
  this.setData({
    act:1,
    mlist:a
  })
  console.log(this.data.mlist)
},
/**
 * 选择正式成员
 */
chooseFormal: function (e){
  var isChoose = e.currentTarget.dataset.ischoose;
  var index = e.currentTarget.dataset.index;
  var a = this.data.mlist;//临时记录选中成员
  var tmpMembers = this.data.members;
  for (var i = 0; i < tmpMembers['wait'].length;i++){
    var item = tmpMembers['wait'][i];
    item['isChoose'] = 0;
  }
  this.setData({
    members:tmpMembers
  })
  if (isChoose == 1) {
    isChoose = 0;
    if(a.length > 0){
      var pos = a.indexOf(index);
      if (pos > -1) {
        a.splice(pos, 1);
      }
    }
    
  } else if (isChoose == 0) {
    isChoose = 1;
    // 在存放操作数组中，使用第一个元素来判断操作类型
    if (a.length == 0) {
      // 数组为空，第一次放数据进去，  wait  ---  操作申请中的成员    formal ------  操作正式成员
      a[0] = 'formal';
      a.push(index);
    } else {
      if (a[0] == 'formal') {
        a.push(index);
      } else {
        a = [];
        a[0] = 'formal';
        a.push(index);
      }
    }
  }
  var members = this.data.members;
  for (var i = 0; i < members['formal'].length; i++) {
    if (index == members['formal'][i]['UserId']) {
      members['formal'][i]['isChoose'] = isChoose;
      this.setData({
        members: members
      })
    }
  }
  this.setData({
    act: 0,
    mlist: a
  })
  console.log(this.data.mlist)
},

/**
 * 提交事件
 */
  sendData: function (e) {
    var that =this;
    console.log(this.data.mlist.length)
    if(this.data.mlist.length < 2){
      return false;
    }else{
     wx.request({
      url: app.globalData.webroot + '/index/firm/changeMembers',
      method: 'POST',
      data: {
        firmId: that.data.firmId,
        mlist: that.data.mlist
      },
      header: {
        'content-type': 'application/json' // 默认值
      },
      success(res) {

        wx.navigateTo({
          url: '/pages/index/firm/firmIndex/firmIndex/firmIndex?staffId=' + that.data.firmId,
        })
      }
    })
    }
    
  },
  /**
   * 生命周期函数--监听页面初次渲染完成
   */
  onReady: function () {

  },

  /**
   * 生命周期函数--监听页面显示
   */
  onShow: function () {

  },

  /**
   * 生命周期函数--监听页面隐藏
   */
  onHide: function () {

  },

  /**
   * 生命周期函数--监听页面卸载
   */
  onUnload: function () {

  },

  /**
   * 页面相关事件处理函数--监听用户下拉动作
   */
  onPullDownRefresh: function () {

  },

  /**
   * 页面上拉触底事件的处理函数
   */
  onReachBottom: function () {

  },

  /**
   * 用户点击右上角分享
   */
  onShareAppMessage: function () {

  }
})