// // 引入SDK核心类
// import QQMapWX from '../../../../../utils/qqmap-wx-jssdk.min.js';
var QQMapWX = require('../../../../../utils/qqmap-wx-jssdk.js');

// 实例化API核心类
var qqmapsdk = new QQMapWX({
  key: 'YHSBZ-GCNCQ-4L25N-GVXEC-N4U5S-VRBWT' // 必填
});


const app = getApp();
Page({
  data: {
  //  地图

    // 地图
    //优惠 变量
    allList: [{
      selected: false,
      "select": 0,
      'itemEach': '单笔满减',
      'itemVal': '满200减20'
    },
    {
      selected: false,
      "select": 1,
      'itemEach': '熟客折扣',
      'itemVal': '20%OFF'
    },
    {
      selected: false,
      "select": 2,
      'itemEach': '首单折扣',
    },
    ],
    // 文件上传
    imgList: [],
    // 星星 
    one_2: 0,
    two_2: 5,
    // 星星
    //滑块的
    imgs: [
      '测试数据1111111', '测试数据2222222', '测试数据33333'
    ],
    //滑块结束
    _num: 0,
    pageBackgroundColor: 'red',  //点击添加背景
    webRoot: app.globalData.webroot,  //得到根
    // 下拉菜单变量  
    index: null,
    //下拉菜单变量结束
    CustomBar: app.globalData.CustomBar,
    TabCur: 0,
    num: 1,  //对勾的 0是第一步  1是第二步
    webRoot: app.globalData.webroot,
    basics: 0,
    // 预约进度条
    numList: [{
      name: '预约'
    }, {
      name: '到店'
    }, {
      name: '服务中'
    }, {
      name: '支付'
    }, {
      name: '晒单'
    },],

    // scroll: 0,
    dateArr: []   //放时间的
  }, 
  // 地图
  formSubmit(e) {
    var _this = this;
    qqmapsdk.reverseGeocoder({
      //位置坐标，默认获取当前位置，非必须参数
      /**
       * 
       //Object格式
        location: {
          latitude: 39.984060,
          longitude: 116.307520
        },
      */
      /**
       *
       //String格式
        location: '39.984060,116.307520',
      */
      location: '39.95542,116.80464',
// 变化的
      // location: e.detail.value.reverseGeo || '', //获取表单传入的位置坐标,不填默认当前位置,示例为string格式
      //get_poi: 1, //是否返回周边POI列表：1.返回；0不返回(默认),非必须参数
      success: function (res) {//成功后的回调
        console.log(res);
        var res = res.result;
        var mks = [];
        /**
         *  当get_poi为1时，检索当前位置或者location周边poi数据并在地图显示，可根据需求是否使用
         *
            for (var i = 0; i < result.pois.length; i++) {
            mks.push({ // 获取返回结果，放到mks数组中
                title: result.pois[i].title,
                id: result.pois[i].id,
                latitude: result.pois[i].location.lat,
                longitude: result.pois[i].location.lng,
                iconPath: './resources/placeholder.png', //图标路径
                width: 20,
                height: 20
            })
            }
        *
        **/
        //当get_poi为0时或者为不填默认值时，检索目标位置，按需使用
        mks.push({ // 获取返回结果，放到mks数组中
          title: res.address,
          id: 0,
          latitude: res.location.lat,
          longitude: res.location.lng,
          // iconPath: './resources/placeholder.png',//图标路径
          width: 20,
          height: 20,
          callout: { //在markers上展示地址名称，根据需求是否需要
            content: res.address,
            color: '#000',
            display: 'ALWAYS'
          }
        });
        _this.setData({ //设置markers属性和地图位置poi，将结果在地图展示
          markers: mks,
          poi: {
            latitude: res.location.lat,
            longitude: res.location.lng
          }
        });
      },
      fail: function (error) {
        console.error(error);
      },
      complete: function (res) {
        console.log(res);
      }
    })
  },
  // formSubmit(e) {
  //   var _this = this;
  //   //调用地址解析接口
  //   qqmapsdk.geocoder({
  //     //获取表单传入地址
  //     address: e.detail.value.geocoder, //地址参数，例：固定地址，address: '北京市海淀区彩和坊路海淀西大街74号'
  //     success: function (res) {//成功后的回调
  //       console.log(res);
  //       var res = res.result;
  //       var latitude = res.location.lat;
  //       var longitude = res.location.lng;
  //       //根据地址解析在地图上标记解析地址位置
  //       _this.setData({ // 获取返回结果，放到markers及poi中，并在地图展示
  //         markers: [{
  //           id: 0,
  //           title: res.title,
  //           latitude: latitude,
  //           longitude: longitude,
  //           iconPath: './resources/placeholder.png',//图标路径
  //           width: 20,
  //           height: 20,
  //           callout: { //可根据需求是否展示经纬度
  //             content: latitude + ',' + longitude,
  //             color: '#000',
  //             display: 'ALWAYS'
  //           }
  //         }],
  //         poi: { //根据自己data数据设置相应的地图中心坐标变量名称
  //           latitude: latitude,
  //           longitude: longitude
  //         }
  //       });
  //     },
  //     fail: function (error) {
  //       console.error(error);
  //     },
  //     complete: function (res) {
  //       console.log(res);
  //     }
  //   })
  // },
  // 地图 
  // 地图
  // mapView: function () {
  //     var that = this
  //     wx.chooseLocation({
  //        success: function (res) {
  //         console.log("得到位置");
            // success
        //     console.log(res, "location")
        //     that.setData({
        //        hasLocation: true,
      //          location: {
      //             longitude: res.longitude,
      //             latitude: res.latitude
      //          },
      //          detail_info: res.address,
      //          wd: res.latitude,
      //          jd: res.longitude
      //       })
      //    },
      //    fail: function () {
            // fail
      //    },
      //    complete: function () {
            // complete
  //          console.log("得到位置11111");
  //        }
  //     })
  // },
  // 地图
  //优惠点击事件
  allList:function(e){
    console.log("----");
    // var that = this;
    console.log(e.currentTarget.dataset.index);
    // console.log(e.target.dataset.index);
    // console.log(e.target.dataset.numone);
    let string = "allList[" + e.currentTarget.dataset.index + "].selected"
    this.setData({
      [string]: !this.data.allList[e.currentTarget.dataset.index].selected
    })
    let detailValue = this.data.allList.filter(it => it.selected).map(it => it.select)
    console.log('所有选中的值为：', detailValue);
    console.log(string); 
  
    
  },
  // 文件上传
  ChooseImage() {
    console.log("上传");
    wx.chooseImage({
      count: 3, //默认9
      sizeType: ['original', 'compressed'], //可以指定是原图还是压缩图，默认二者都有
      sourceType: ['album'], //从相册选择
      success: (res) => {
        if (this.data.imgList.length != 0) {
          this.setData({
            imgList: this.data.imgList.concat(res.tempFilePaths)
          })
        } else {
          this.setData({
            imgList: res.tempFilePaths
          })
        }
        console.log(this.data.imgList);
        console.log(this.data.imgList.length);
        if (this.data.imgList.length==3){
          wx.showModal({
            title: '提示',
            content: '确认提交',
            success:(res)=> {
              if (res.confirm) {
                console.log('用户点击确定');
                // 把X号隐藏
                console.log('res是'+res);
                var that=this;
                that.setData({
                  hideX: true  
                })

              } else if (res.cancel) {
              
                console.log('用户点击取消')
              }
            }    
          })
         
              // wx.showModal({
              //   title: '召唤师',
              //   content: '确定要删除这段回忆吗？',
              //   cancelText: '再看看',
              //   confirmText: '再见',
              //   success: res => {
              //     if (res.confirm) {
              //       //上传图片
              //       console.log("上传图片");
              //     }
              //   }
              // })
        }
      }
    });
    
  },
  ViewImage(e) {
    console.log("上传11111");
    wx.previewImage({
      urls: this.data.imgList,
      current: e.currentTarget.dataset.url
    });
   
  },
  DelImg(e) {
    wx.showModal({
      title: '召唤师',
      content: '确定要删除这段回忆吗？',
      cancelText: '再看看',
      confirmText: '再见',
      success: res => {
        if (res.confirm) {
          this.data.imgList.splice(e.currentTarget.dataset.index, 1);
          this.setData({
            imgList: this.data.imgList
          })
        }
      }
    })
  },
  // 文件上传
  // 星星
  in_xin: function (e) {
    var in_xin = e.currentTarget.dataset.in;
    var one_2;
    if (in_xin === 'use_sc2') {
      one_2 = Number(e.currentTarget.id);
    } else {
      one_2 = Number(e.currentTarget.id) + this.data.one_2;
    }
    this.setData({
      one_2: one_2,
      two_2: 5 - one_2
    })
    console.log(in_xin);
    console.log("满意的星星是"+this.data.one_2);
    console.log("不满意的星星是"+this.data.two_2);
  },
  // 星星结束
  //textarea 的值
  textareaAInput:function(e){
    console.log(e.detail.value) 
  },
  
  onLoad: function () {
// 地图
   var that=this;
    that.formSubmit();





// 地图



    //  地图
    // var that = this
    // wx.chooseLocation({
    //   success: function (res) {
    //     console.log("得到位置");
    //     // success
    //     console.log(res, "location")
    //     that.setData({
    //       hasLocation: true,
    //       location: {
    //         longitude: res.longitude,
    //         latitude: res.latitude
    //       },
    //       detail_info: res.address,
    //       wd: res.latitude,
    //       jd: res.longitude
    //     })
    //   },
    //   fail: function () {
    //     // fail
    //   },
    //   complete: function () {
    //     // complete
    //     console.log("得到位置11111");
    //   }
    // })
    // 地图
    // 关于日期的js
    var date = new Date();
    var arr = [];
    var showDate = date.getFullYear() + '/' + (date.getMonth() + 1) + '/' + date.getDate();
    console.log("今天日期是" + showDate)   //今天日期
    arr.push(date.getDate());
    for (var i = 1; i <= 6; i++) {//后7天
      date.setDate(date.getDate() + 1);
      showDate = date.getFullYear() + '/' + (date.getMonth() + 1) + '/' + date.getDate();
      // console.log(showDate)
      arr.push(date.getDate());
      console.log(date.getDate())
    }
    this.setData({
      dateArr: arr
    })
    console.log(this.data.dateArr);
  },
  // 地图
  // 地图
  // 选择日期点击事件
  chooseDate: function (e) {
    console.log("选择的日期是" + e.currentTarget.dataset.item);
    console.log("点击选择的index是" + e.currentTarget.dataset.index);
  },
  // 点击预约事件
  makeOrder:function(){
    console.log("点击了预约");
  },
  // 地图的js
  //触发关键词输入提示事件
  getsuggest: function (e) {
    var _this = this;
    //调用关键词提示接口
    qqmapsdk.getSuggestion({
      //获取输入框值并设置keyword参数
      keyword: e.detail.value, //用户输入的关键词，可设置固定值,如keyword:'KFC'
      region: '上海', //设置城市名，限制关键词所示的地域范围，非必填参数
      page_size: 8,
      success: function (res) {//搜索成功后的回调
        console.log(res);
        var sug = [];
        for (var i = 0; i < res.data.length; i++) {
          sug.push({ // 获取返回结果，放到sug数组中
            title: res.data[i].title,
            id: res.data[i].id,
            addr: res.data[i].address,
            city: res.data[i].city,
            district: res.data[i].district,
            latitude: res.data[i].location.lat,
            longitude: res.data[i].location.lng
          });
        }
        _this.setData({
          showview: false
        })
        _this.setData({ //设置suggestion属性，将关键词搜索结果以列表形式展示
          suggestion: sug

        });
      },
      fail: function (error) {
        console.error(error + "失败");
        _this.setData({
          showview: true
        })
      },
      complete: function (res) {
        console.log(res);

      }
    });
  },
  //方法回填
  backfill: function (e) {
    console.log("点击");
    this.setData({
      showview: true
    })
    var id = e.currentTarget.id;
    for (var i = 0; i < this.data.suggestion.length; i++) {
      if (i == id) {
        this.setData({
          backfill: this.data.suggestion[i].title,
          latitude: this.data.suggestion[i].latitude,
          longitude: this.data.suggestion[i].longitude
        });
        this.nearby_search();
        return;
      }
    }
  },
  // 根据关键词搜索附近位置
  nearby_search: function () {
    var self = this;

    // 调用接口
    qqmapsdk.search({
      keyword: self.data.detail,  //搜索关键词
      //boundary: 'nearby(' + self.data.latitude + ', ' + self.data.longitude + ', 1000, 16)',
      location: self.data.latitude + ',' + self.data.longitude,
      page_size: 20,
      page_index: 1,
      success: function (res) { //搜索成功后的回调
        //console.log(res.data)
        var sug = [];
        for (var i = 0; i < res.data.length; i++) {
          sug.push({ // 获取返回结果，放到sug数组中
            title: res.data[i].title,
            id: res.data[i].id,
            addr: res.data[i].address,
            province: res.data[i].ad_info.province,
            city: res.data[i].ad_info.city,
            district: res.data[i].ad_info.district,
            latitude: res.data[i].location.lat,
            longitude: res.data[i].location.lng
          });
        }
        self.setData({
          selectedId: 0,
          nearList: sug,
          suggestion: sug
        })
        self.addMarker(sug[0]);
      },
      fail: function (res) {
        //console.log(res);
      },
      complete: function (res) {
        //console.log(res);
      }
    });
  },
  





})